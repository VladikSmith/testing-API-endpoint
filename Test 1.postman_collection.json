{
	"info": {
		"_postman_id": "94f8c441-278c-494a-a611-5c03af65d170",
		"name": "Test 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38358791"
	},
	"item": [
		{
			"name": "+year 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"sum\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2024-12-09&years=1",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2024-12-09"
						},
						{
							"key": "years",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "wrong day 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"level\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add?timestamp=2024-02-31",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					],
					"query": [
						{
							"key": "timestamp",
							"value": "2024-02-31"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "without param 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"level\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/time/add",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"time",
						"add"
					]
				}
			},
			"response": []
		}
	]
}